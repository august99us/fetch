name: Windows GUI Full (Template)

on:
  workflow_call:
    inputs:
      architecture:
        description: 'Target architecture (x64 or arm64)'
        required: true
        type: string
      runner:
        description: 'GitHub runner to use'
        required: true
        type: string

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0

jobs:
  build-gui-full:
    runs-on: ${{ inputs.runner }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install Protoc
      uses: arduino/setup-protoc@v3

    - name: Download ONNX Runtime (GPU - ${{ inputs.architecture }})
      shell: pwsh
      run: |
        Write-Host "Fetching latest ONNX Runtime version..."
        try {
            $release = Invoke-RestMethod -Uri "https://api.github.com/repos/microsoft/onnxruntime/releases/latest"
            $version = $release.tag_name
            Write-Host "Latest version: $version"

            # Remove 'v' prefix if present
            $version = $version -replace '^v', ''
            Write-Host "Normalized version: $version"

            $url = "https://github.com/microsoft/onnxruntime/releases/download/v$version/onnxruntime-win-${{ inputs.architecture }}-gpu-$version.zip"
            $output = "onnxruntime.zip"
            Write-Host "Downloading ONNX Runtime GPU from $url"
            Invoke-WebRequest -Uri $url -OutFile $output

            Write-Host "Extracting ONNX Runtime..."
            Expand-Archive -Path $output -DestinationPath "onnxruntime-extract" -Force
            $extractedDir = Get-ChildItem -Path "onnxruntime-extract" -Directory | Select-Object -First 1

            if ($null -eq $extractedDir) {
                throw "No directory found in extracted archive"
            }

            Write-Host "Extracted to: $($extractedDir.FullName)"
            $libPath = Join-Path $extractedDir.FullName "lib"
            Write-Host "ONNX_BUILD_PATH will be: $libPath"
            echo "ONNX_BUILD_PATH=$libPath" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        }
        catch {
            Write-Host "Error: $_"
            Write-Host $_.Exception.Message
            exit 1
        }

    - name: Install frontend dependencies
      working-directory: fetch-gui
      run: npm install

    - name: Build Tauri application (Full - ${{ inputs.architecture }})
      working-directory: fetch-gui
      run: npm run tauri build -- --features cuda

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: fetch-gui-windows-full-${{ inputs.architecture }}
        path: |
          target/release/bundle/
        retention-days: 7
